name: Create a comment on new issues

on:
  issues:
    types: [opened]

jobs:
  # this step will dump the context from the issues created in gitlab and which are
  # open into the output as we are running an echo command on line 14.
  comment-with-action:
    runs-on: ubuntu-latest
    steps:
      - name: "dump github context"
        run: echo '${{ toJSON(github.event) }}' | jq
        shell: bash

      # using a community action to add a comment on the issue
      # https://github.com/marketplace/actions/create-or-update-comment
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            This is a multi-line test comment
            - With GitHub **Markdown** :sparkles:
            - Created by [create-or-update-comment][1]

            [1]: https://github.com/peter-evans/create-or-update-comment
          reactions: "+1"
    
# The following code will add a comment based on the github api call
  comment-with-api:
      runs-on: ubuntu-latest
      steps: 
          - name: Create Comment with API
            run: |
                gh api --method POST \
                    /repos/${ORGANIZATION}/${REPO}/issues/${ISSUE_NUMBER}/comments \
                    -f "body= Comment from the API call and not the github action"

      env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORGANIZATION: ${{ github.event.repository.owner }}
          REPO: ${{github.event.repository.name }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}

